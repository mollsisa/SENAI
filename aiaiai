CREATE DATABASE teste
GO

USE teste
GO

CREATE TABLE Product(
	id int identity primary key,
	name varchar(max)
);

CREATE TABLE Stock(
	id int identity primary key,
	id_product int references Product(id),
	quantity int
);

CREATE TABLE Sale(
	id int identity primary key,
	id_product int references Product(id),
	quantity int,
	value money,
	date date
);

CREATE TABLE Log(
	id int identity primary key,
	date date,
	rtable varchar(max),
	command varchar(max),
	message varchar(max),
	severity int
);
GO

CREATE TRIGGER  UpdateStock
ON  Sale
AFTER UPDATE, INSERT, DELETE
AS
BEGIN
	IF UPDATE(quantity)
		UPDATE dbo.Stock SET quantity = inserted.quantity FROM inserted WHERE Stock.id_product = inserted.id_product	
END
GO

CREATE PROCEDURE RegisterSales
	@id_product INT, @quantity INT, @value MONEY, @date DATE
AS
BEGIN
	BEGIN TRY
		INSERT INTO Sale(id_product, quantity, value, date) VALUES (@id_product, @quantity, @value, @date)
	END TRY
	BEGIN CATCH
		INSERT INTO Log(date, rtable, command, message, severity) VALUES(GETDATE(), 'Sale', ERROR_LINE(), ERROR_MESSAGE(), ERROR_SEVERITY())
		PRINT('Try again later')
	END CATCH
END
GO

CREATE PROCEDURE InsertProduct
	@name VARCHAR(MAX), @quantity INT
AS
BEGIN
	BEGIN TRY
		INSERT INTO Product(name) VALUES (@name)

		BEGIN TRY
			DECLARE @Id_Product INT 
			SET @Id_Product = (SELECT id FROM Product WHERE name = @name)

			INSERT INTO Stock(id_product, quantity) VALUES (@Id_Product, @quantity)
		END TRY

		BEGIN CATCH
			INSERT INTO Log(date, rtable, command, message, severity) VALUES(GETDATE(), 'Stock', ERROR_LINE(), ERROR_MESSAGE(), ERROR_SEVERITY())
			PRINT('Error on table Stock! Try again later')
		END CATCH
	END TRY

	BEGIN CATCH
		INSERT INTO Log(date, rtable, command, message, severity) VALUES(GETDATE(), 'Product', ERROR_LINE(), ERROR_MESSAGE(), ERROR_SEVERITY())
		PRINT('Error on table Product! Try again later')
	END CATCH
END
GO

CREATE PROCEDURE UpdateProduct
	@name VARCHAR(MAX), @newname VARCHAR(MAX), @quantity INT
AS
BEGIN
	BEGIN TRY
		UPDATE Product SET name = @newname WHERE name = @name

		BEGIN TRY
			DECLARE @Id_Product INT 
			SET @Id_Product = (SELECT id FROM Product WHERE name = @newname)

			UPDATE Stock SET quantity = @quantity WHERE id_product = @Id_Product
		END TRY

		BEGIN CATCH
			INSERT INTO Log(date, rtable, command, message, severity) VALUES(GETDATE(), 'Stock', ERROR_LINE(), ERROR_MESSAGE(), ERROR_SEVERITY())
			PRINT('Error on table Stock! Try again later')
		END CATCH
	END TRY

	BEGIN CATCH
		INSERT INTO Log(date, rtable, command, message, severity) VALUES(GETDATE(), 'Product', ERROR_LINE(), ERROR_MESSAGE(), ERROR_SEVERITY())
		PRINT('Error on table Product! Try again later')
	END CATCH
END
GO

CREATE PROCEDURE DeleteProduct
	@name VARCHAR(MAX)
AS
BEGIN
	BEGIN TRY
		DECLARE @Id_Product INT 
		SET @Id_Product = (SELECT id FROM Product WHERE name = @name)
		DELETE FROM Stock WHERE id_product = @Id_Product

		BEGIN TRY
			DELETE FROM Product WHERE name = @name			
		END TRY

		BEGIN CATCH
			INSERT INTO Log(date, rtable, command, message, severity) VALUES(GETDATE(), 'Stock', ERROR_LINE(), ERROR_MESSAGE(), ERROR_SEVERITY())
			PRINT('Error on table Product! Try again later')
		END CATCH
	END TRY

	BEGIN CATCH
		INSERT INTO Log(date, rtable, command, message, severity) VALUES(GETDATE(), 'Product', ERROR_LINE(), ERROR_MESSAGE(), ERROR_SEVERITY())
		PRINT('Error on table Stock! Try again later')
	END CATCH
END
GO
